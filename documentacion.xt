                                                Documentaci√≥n Completa del Sistema RestaurantPOS by pedro ure√±a

 1. Introducci√≥n y Visi√≥n General

El sistema RestaurantPOS es una soluci√≥n integral de punto de venta dise√±ada espec√≠ficamente para restaurantes. 
el sistema maneja todas las operaciones de un restaurante, incluyendo gesti√≥n de mesas, pedidos, delivery, facturaci√≥n, 
inventario y control de usuarios.

este proyecto sera escalable a largo plazo. si obtiene este sistemas utilizalo con moderacion y queda retringido la venta y retribucion del mismo solo para uso educativo,
debido a que lo desarrolle para un cliente, y busco el poder seguir actualizando y mejorando el sistemas queda prohibido atribuirse trabajo del mismo. 

en caso de necesitar otros documento que no esten o asesoria comunicate directo conmigo.

 2. Arquitectura del Sistema

 2.1. Estructura de Carpetas
```
/restaurantpos/admin
‚îÇ
‚îú‚îÄ‚îÄ /config/           # Configuraci√≥n, conexi√≥n BD y seguridad
‚îú‚îÄ‚îÄ /auditoria/        # Logs y auditor√≠as del sistema
‚îú‚îÄ‚îÄ /factura/          # Facturaci√≥n y cierre de caja
‚îú‚îÄ‚îÄ /delivery/         # M√≥dulo de pedidos delivery
‚îú‚îÄ‚îÄ /mesas/            # Gesti√≥n de mesas
‚îú‚îÄ‚îÄ /bar/              # Gesti√≥n de pedidos en bar
‚îú‚îÄ‚îÄ /usuario/          # Administraci√≥n de usuarios y roles
‚îú‚îÄ‚îÄ /products/         # Gesti√≥n de productos e inventario
‚îú‚îÄ‚îÄ /empresa/          # Configuraci√≥n de la empresa (RNC, datos fiscales)
‚îú‚îÄ‚îÄ /hrm/              # Recursos humanos (empleados)
‚îú‚îÄ‚îÄ /notificaciones/   # Alertas y mensajes internos
‚îú‚îÄ‚îÄ /partials/         # Plantillas reutilizables
‚îú‚îÄ‚îÄ /logs/             # Registros de errores y actividades
‚îî‚îÄ‚îÄ index.php          # P√°gina de inicio/controlador principal
```otros modulos en admin

          2.2. Tecnolog√≠as Utilizadas

- **Backend**: PHP nativo
- **Base de datos**: MySQL/MariaDB
- **Frontend**: HTML, CSS, JavaScript, Bootstrap
- **Seguridad**: Encriptaci√≥n SHA1, validaci√≥n de entradas


               2.2. Tecnolog√≠as Utilizadas
üîπ Lenguajes y Frameworks

PHP 8+ ‚Üí n√∫cleo del sistema.

Laravel ‚Üí estructura moderna y mantenible.

JavaScript (Vanilla + librer√≠as) ‚Üí validaciones y funciones interactivas.

AJAX / Fetch API ‚Üí comunicaci√≥n as√≠ncrona (actualizaci√≥n de pedidos, facturas en tiempo real).

HTML5 / CSS3 / Bootstrap ‚Üí interfaz responsiva y adaptable a dispositivos m√≥viles.

Tailwind (en ajustes visuales) ‚Üí modernizaci√≥n del estilo.

üîπ Base de Datos

MySQL 8 ‚Üí gesti√≥n relacional de datos, optimizada con √≠ndices y claves for√°neas.

phpMyAdmin ‚Üí administraci√≥n y respaldo de la BD.

üîπ Servidor y Entorno

Apache 2.4+ (sobre Linux o Windows).

XAMPP/LAMP (entorno de desarrollo local).

Hosting cPanel con soporte PHP/MySQL para producci√≥n.

üîπ Integraciones Locales

Formato monetario RD$ con 2 decimales.

C√°lculo autom√°tico de ITBIS 18 % en facturaci√≥n.

2.2.3 M√©todos de Seguridad Utilizados

üîπ Autenticaci√≥n y Control de Acceso

Sistema de roles y permisos ‚Üí administrador, cajero, mesero, supervisor.

Validaci√≥n de login con sesiones seguras ‚Üí check_login.php.

Bloqueo de acceso directo a p√°ginas restringidas ‚Üí validaci√≥n previa de usuario.

üîπ Protecci√≥n de Datos y Operaciones

Consultas parametrizadas (PDO / MySQLi) ‚Üí protecci√≥n contra inyecci√≥n SQL.

Sanitizaci√≥n de entradas (filtros en PHP y JS).

Validaci√≥n en cliente y servidor ‚Üí doble control de formularios.

Logs centralizados ‚Üí registro en /logs/error.log y auditor√≠a de actividades.

üîπ Gesti√≥n de Errores

Deshabilitar errores en producci√≥n (display_errors = 0).

Redirecci√≥n a p√°ginas personalizadas de error (404, 403, 500).(por trabajar queda pendiente para otra version en producion, esta sera la demo 1)

üîπ Sesiones y Cookies

Regeneraci√≥n de sesi√≥n despu√©s de login.

Expiraci√≥n autom√°tica de sesiones inactivas.

Restricci√≥n de cookies con HttpOnly y Secure (en servidores HTTPS).

üîπ Acceso a Archivos

Archivos sensibles fuera del alcance p√∫blico (/config/config.php).

.htaccess para denegar acceso a directorios cr√≠ticos.
.bloqueo de los modulos directo delimitado por usuarios. 


          3. Base de Datos y Esquema

            3.1. Tablas Principales

         **Tablas de Gesti√≥n de Usuarios**

- `rpos_admin` - Administradores del sistema
- `rpos_staff` - Personal del restaurante con diferentes roles
- `rpos_customers` - Clientes registrados

     **Tablas de Gesti√≥n de Productos**

- `rpos_products` - Cat√°logo de productos
- `rpos_categorias_productos` - Categor√≠as de productos
- `categoria_tipo` - Tipos de categor√≠as (Comida/Bebida)

     **Tablas de Operaciones**

- `rpos_orders` - √ìrdenes generales
- `rpos_order_items` - Items de las √≥rdenes
- `rpos_delivery_orders` - √ìrdenes de delivery
- `rpos_delivery_items` - Items de delivery
- `rpos_mesas` - Gesti√≥n de mesas
- `rpos_ordenes_mesas` - Relaci√≥n √≥rdenes-mesas

    **Tablas de Facturaci√≥n y Pagos**

- `rpos_facturas` - Facturas generadas
- `rpos_factura_items` - Items de facturas
- `rpos_payments` - Pagos procesados
- `rpos_caja` - Control de caja registradora
- `rpos_movimientos_caja` - Movimientos de caja

           **Tablas de Configuraci√≥n**

- `rpos_configuracion` - Configuraci√≥n del restaurante
- `rpos_secuenciales_comprobantes` - Secuenciales para facturaci√≥n

3.2. Relaciones Clave

- Las √≥rdenes est√°n vinculadas a mesas o delivery
- Las facturas se generan a partir de √≥rdenes
- Los pagos se registran contra facturas
- El inventario se descuenta al realizar √≥rdenes

4. M√≥dulos Principales

4.1. M√≥dulo de Autenticaci√≥n y Usuarios

- Sistema de roles: Administrador, Mesero, Cocinero, Bartender, Delivery, Cajero
- Activaci√≥n por email con claves de seguridad
- Recuperaci√≥n de contrase√±as
- Auditor√≠a de movimientos (`rpos_movimientos_log`)

4.2. M√≥dulo de Gesti√≥n de Productos

- Categorizaci√≥n de productos (Comida/Bebida)
- Control de inventario
- Gesti√≥n de precios
- Im√°genes de productos

4.3. M√≥dulo de Mesas y √ìrdenes

- Gesti√≥n de estado de mesas (Disponible, Ocupada, etc.)
- Creaci√≥n de √≥rdenes por mesa
- Seguimiento de estado de preparaci√≥n
- Notificaciones para cocina y bar

4.4. M√≥dulo de Delivery

- Gesti√≥n completa de pedidos para llevar
- Seguimiento de estado (Recibido, En preparaci√≥n, En camino, Entregado)
- Sistema de repartidores
- C√°lculo de costos de env√≠o

4.5. M√≥dulo de Facturaci√≥n

- Generaci√≥n de facturas fiscales y finales
- C√°lculo autom√°tico de ITEBIS (18%) y servicio (10%)
- Secuenciales de comprobantes (NCF)
- Diferentes m√©todos de pago

4.6. M√≥dulo de Caja

- Apertura y cierre de caja
- Control de montos iniciales y finales
- Reportes de ventas por m√©todo de pago
- Movimientos de caja (ingresos/egresos)

5. Flujos de Trabajo Principales

5.1. Proceso de Atenci√≥n en Mesa

1. Asignar mesa a cliente
2. Tomar orden a trav√©s del sistema
3. Orden enviada a cocina/bar
4. Actualizar estado de preparaci√≥n
5. Marcar como listo para servir
6. Generar factura
7. Procesar pago
8. Cerrar mesa

5.2. Proceso de Delivery

1. Recepci√≥n de pedido por tel√©fono/sistema
2. Registro de datos del cliente
3. Asignaci√≥n a repartidor (opcional)
4. Seguimiento de estados
5. Facturaci√≥n y entrega
6. Confirmaci√≥n de pago

5.3. Cierre de Caja Diario

1. Apertura con monto inicial
2. Registro de todas las transacciones
3. C√°lculo de ventas por m√©todo de pago
4. Cierre con monto final
5. Generaci√≥n de reporte

6. Caracter√≠sticas de Seguridad

- Autenticaci√≥n de usuarios con hash de contrase√±as
- Control de acceso por roles
- Registro de todas las actividades (auditor√≠a)
- Validaci√≥n de datos de entrada
- Protecci√≥n contra inyecciones SQL
- **Futuro**: Encriptaci√≥n de URLs (pendiente para pr√≥xima versi√≥n)

7. Personalizaci√≥n y Configuraci√≥n

7.1. Configuraci√≥n del Restaurante

- Datos fiscales (RNC, nombre, direcci√≥n)
- Porcentajes de impuestos (ITEBIS) y servicio
- Configuraci√≥n de logo empresarial
- Secuenciales de facturaci√≥n

 7.2. Tipos de Clientes

- Personas f√≠sicas
- Empresas (con RNC)
- Cliente gen√©rico para ventas r√°pidas

8. Reportes y An√°lisis

- Ventas por per√≠odo
- Productos m√°s vendidos
- Rendimiento de meseros
- Control de caja
- Estado de mesas y √≥rdenes

9. Consideraciones T√©cnicas para Mejoras Futuras

9.1. Encriptaci√≥n de URLs (Pr√≥xima Versi√≥n)

Como se discuti√≥, la encriptaci√≥n de URLs visibles en el navegador est√° planificada para una futura versi√≥n. Consideraciones:

- Algoritmo: AES-256
- √Åmbito: Par√°metros sensibles en URLs
- Implementaci√≥n: Middleware para encriptar/desencriptar
- Impacto: Minimizar exposici√≥n de datos sensibles

9.2. Otras Mejoras Identificadas

- API RESTful para integraciones
- App m√≥vil para toma de √≥rdenes en mesa
- Dashboard en tiempo real
- Integraci√≥n con impresoras fiscales
- Sistema de lealtad de clientes

10. Estado Actual del Sistema

10.1. Funcionalidades Completadas

- ‚úÖ Gesti√≥n de usuarios y autenticaci√≥n
- ‚úÖ CRUD completo de productos y categor√≠as
- ‚úÖ Sistema de mesas y √≥rdenes
- ‚úÖ M√≥dulo de delivery completo
- ‚úÖ Sistema de facturaci√≥n con NCF
- ‚úÖ Control de caja y reportes
- ‚úÖ Notificaciones en tiempo real
- ‚úÖ Gesti√≥n de estados (cocina, bar, delivery)
- ‚úÖ Repostes
- ‚úÖ Auditoria (solo caja se puede expandir)

 10.2. Pr√≥ximas Implementaciones

- Encriptaci√≥n de URLs (como se discuti√≥)
- Integraci√≥n con payment gateways
- App m√≥vil para meseros
- Dashboard avanzado con analytics
- Sistema de reservas en l√≠nea

11. Conclusi√≥n

El sistema RestaurantPOS es una soluci√≥n robusta y completa para la gesti√≥n de restaurantes. La arquitectura modular permite una f√°cil expansi√≥n y las caracter√≠sticas implementadas cubren todos los aspectos operativos de un restaurante moderno. La base de datos est√° bien estructurada y normalizada, permitiendo escalabilidad y mantenimiento.

La pr√≥xima versi√≥n, que incluir√° la encriptaci√≥n de URLs como se discuti√≥, mejorar√° a√∫n m√°s la seguridad del sistema sin comprometer la usabilidad.
